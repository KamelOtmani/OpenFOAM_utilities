/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}

castellatedMesh true;
snap            true;
addLayers       true;

#include "../paramsDict"

geometry
{
    // box
    // {
    //     type searchableBox;
    //     min (0.01 0.01 0.01);
    //     max (0.04 0.04 0.04);
    // }
    sphere_sym
    {
        type    searchableSphere;
        centre  ($center $center $center);
        radius  #calc "$d_b/2";
    }
    // Add more geometries if needed
};

castellatedMeshControls
{    
    
    // Overall cell limit (approximately). Refinement will stop immediately
    // upon reaching this number so a refinement level might not complete.
    // Note that this is the number of cells before removing the part which
    // is not 'visible' from the keepPoint. The final number of cells might
    // actually be a lot less.
    maxGlobalCells 400000000;
    // The surface refinement loop might spend lots of iterations refining just a
    // few cells. This setting will cause refinement to stop if <= minimumRefine
    // are selected for refinement. Note: it will at least do one iteration
    // (unless the number of cells to refine is 0)
    minRefinementCells 0;

    // Number of buffer layers between different levels.
    // 1 means normal 2:1 refinement restriction, larger means slower
    // refinement.
    nCellsBetweenLevels 10;

    // for parallel processing

    // Allow a certain level of imbalance during refining
    // (since balancing is quite expensive)
    // Expressed as fraction of perfect balance (= overall number of cells /
    // nProcs). 0=balance always.
    maxLoadUnbalance 0.10;
    // If local number of cells is >= maxLocalCells on any processor
    // switches from from refinement followed by balancing
    // (current method) to (weighted) balancing before refinement.
    maxLocalCells 20000000;



    features ( 
        // {file "eMesh"; level 2;}
         );

    // Refinement parameters
    refinementSurfaces
    {
        sphere_sym
        {
            // type    searchableSphere;
            level   ($RefinementLevels $RefinementLevels);
            patchInfo {
                type wall;
            }
        }
    }

    resolveFeatureAngle 30;
    refinementRegions
    {
        // Add more refinement regions if needed
    }

    locationInMesh (1e-4 1e-4 1e-4);

    // Whether any faceZones (as specified in the refinementSurfaces)
    // are only on the boundary of corresponding cellZones or also allow
    // free-standing zone faces. Not used if there are no faceZones.
    allowFreeStandingZoneFaces false;
}

snapControls
{
    // Number of patch smoothing iterations before finding correspondence
    // to surface
    nSmoothPatch 3;

    // Maximum relative distance for points to be attracted by surface.
    // True distance is this factor times local maximum edge length.
    // Note: changed(corrected) w.r.t 17x! (17x used 2* tolerance)
    tolerance 2.0;

    // Number of mesh displacement relaxation iterations.
    nSolveIter 180;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 10;

    // Feature snapping

    // Number of feature edge snapping iterations.
    // Leave out altogether to disable.
    nFeatureSnapIter 20;

    // Detect (geometric only) features by sampling the surface
    // (default=false).
    implicitFeatureSnap true;

    // Use castellatedMeshControls::features (default = true)
    explicitFeatureSnap true;

    // Detect features between multiple surfaces
    // (only for explicitFeatureSnap, default = false)
    multiRegionFeatureSnap false; 
}

addLayersControls
{
    relativeSizes true;
    layers
    {
        sphere_sym
        {
            nSurfaceLayers 6;
        }
    }

    // Expansion factor for layer mesh
    expansionRatio 1.1;

    // Wanted thickness of final added cell layer. If multiple layers
    // is the
    // thickness of the layer furthest away from the wall.
    // Relative to undistorted size of cell outside layer.
    // is the thickness of the layer furthest away from the wall.
    // See relativeSizes parameter.
    finalLayerThickness 0.7;

    // Minimum thickness of cell layer. If for any reason layer
    // cannot be above minThickness do not add layer.
    // Relative to undistorted size of cell outside layer.
    minThickness 0.0001;

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow 0;

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 85;

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle 25;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 4;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 3;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio 0.5;

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio 0.2;

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedianAxisAngle 90;


    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;

    minMedialAxisAngle 90;

    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter 50;
}

meshQualityControls
{
    #include "meshQualityDict"
    // #includeEtc "caseDicts/meshQualityDict"
    // //- Max skewness allowed
    // maxNonOrtho 65;
    // maxBoundarySkewness 20;
    // maxInternalSkewness 4;

    // //- Max concaveness allowed
    // maxConcave 80;

    // //- Minimum pyramid volume. Smaller values might improve skewness,
    // //- but could also collapse small pyramids during the layer addition.
    // //- Values must be > 0
    // minVol 1e-13;

    // //- Minimum quality of the tet formed by the triangle/triangles
    // //- detected at non-orthogonal edges.
    // //- 1 = poor quality, 0 = ideal tet
    // minTetQuality 1e-30;

    // //- Minimum face area. All areas smaller than this value will be
    // //- considered as errors. Set to zero to disable.
    // minArea -1;

    // //- Minimum face twist. All angles smaller than this value will be
    // //- considered as errors. Set to zero to disable.
    // minTwist 0.02;

    // //- Minimum normalised cell determinant
    // //- 1 = inverted, 0 = flat
    // minDeterminant 0.001;

    // //- Minumum allowable face flatness ratio.
    // //- Set to >= 1 for high aspect ratio cells.
    // minFlatnessRatio 0.5;

    // //- Minimum number of sweep iterations.
    // minVolRatio 0.01;

    // //- Minimum pyramid volume ratio. Face pyramids that collapse to a
    // //- single point will be removed if they are smaller than this
    // //- threshold. Set to a value < 1 to disable.
    // minTriangleTwist -1;

    // //- minimum normalised cell determinant
    // //- 1 = inverted, 0 = flat
    // minFaceWeight 0.02;

    //- Number of error distribution iterations
    nSmoothScale 4;
    //- Amount to scale back displacement at error points
    errorReduction 0.75;
}

// Advanced settings
writeFlags
(
    scalarLevels
    layerSets
    layerFields     // write volScalarField for layer coverage
);

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;
